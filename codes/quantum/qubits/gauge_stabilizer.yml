#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: gauge_stabilizer
physical: qubits
logical: qubits

name: 'Gauge stabilizer code'
introduced: '\cite{arXiv:quant-ph/0508131}'

description: 'Also called a subsystem stabilizer code. Intuitively, the idea is to create a stabilizer code with extra qubits attached to it that may aid in decoding. Note that this doesn''t lead to new codes but does lead to new error correction and fault tolerance procedures. To create these codes proceed as follows. Choose \(2n\) operators \{ X_j'',Z_j''\}_{j=1}^n from \(\mathcal{P}_n\), the Pauli group on \(n\) qubits, such that they obey the same commutation relations as the regular \(n\)-qubit Pauli generators \( \{X_j,Z_j\}_{j=1}^n \) (the subscript on these latter operators indicates the single qubit the Pauli matrix acts on). The primed operators might act on more than one physical (or \textit{bare}) qubit but they behave as if they acted only on a single qubit. WLOG we can choose a stabilizer group as \( \mathcal{S} = \langle Z_1,\dots,Z_s \rangle \). It follows that the normalizer of \(\mathcal{S} \) is \( N(\mathcal{S}) = \langle i,Z_1'',\dots,Z_n'',X_{s+1}'',\dots,X_n'' \rangle \). We now choose a gauge group as \( \mathcal{G} = \langle i, Z_1'',\dots,Z_s'', X_{s+1}'',Z_{s+1}'', \dots, X_{s+r}'',Z_{s+r}'' \rangle \) with \( s + r \leq n \). The logical group is choosen as \( \mathcal{L} = N(\mathcal{S})/\mathcal{G} \simeq \langle X_{s+r+1}'',Z_{s+r+1}'', \dots, X_n'',Z_n'' \rangle \). Now the codespace \( C \) is as usual the \(+1\) eigenspace of the stabilizer \( \mathcal{S} \). But the gauge and logical groups have further decomposed this space into \( C = A \otimes B  \simeq (\mathbb{C}^2)^{\otimes k} \otimes (\mathbb{C}^2)^{\otimes r} \). Thus the Hilbert space is partitioned into 3 sets; \(k\) logical qubits, \(r\) gauge qubits, and \(s\) stabilizer qubits, with \(s+r+k=n\). '
protection: 'Just as for stabilizer codes, we measure the stabilizer generators to get a syndrome. A set of errors \( \{ E_a \} \) is correctable iff \( E_aE_b \not\in N(\mathcal{S}) - \mathcal{G} \) for all pairs \(a,b\). The distance of the code is the minimal weight of operators in \( N(\mathcal{S}) - \mathcal{G}\). A gauge stabilizer code thus has 4 parameters and is denoted by \( [[n,k,r,d]] \).'

features:

  rate: ''

  # This field that starts a list of strings, indexed by a dash; do not leave it
  # empty. If empty, comment out.
  # encoders: 
    # - 'Unitary circuit of depth ... \cite{arxiv:old-paper}.'
    # - 'Measurement-based preparation ... with ancilla overhead of ... .'
    # - 'Leave discussion of fault tolerance to fault-tolerance field.'

  # transversal_gates: 'Transversal ... gates \cite{doi:ok-paper}. Comment out if doesn''t apply.'

  # general_gates:
    # - 'Universal gate set achieved by either additional ... gate.'
    # - 'Magic-state distillation protocols'
    # - 'kth Clifford hierarchy gates obtained by ... circuits'

  # decoders:
    # - 'Details about how syndrome measurements are done; discuss overhead, if applicable.'
    # - 'MWPM decoding algorithm \cite{doi:good-paper} with ... overhead.'
    # - 'Just-in-time decoder with ... \cite{arxiv:awesome-paper}.'

notes:
    - 'When the gauge group \( \mathsf{G} \) is abelian, the above is reduced to the standard stabilizer formalism.'

relations:
  parents:
    - code_id: oecc
      detail: ''

  cousins:
    - code_id: stabilizer
      detail: 'Gauge stabilizer codes reduce to stabilizer codes when there are no gauge qubits.'
